@page "/post/{year:int}/{month:int}/{day:int}/{name}"
@page "/post/{id:guid}"
@using Bom.Blog.Blazor.Web.Common
@using Bom.Blog.Posts
@inject IPostService postService
@inject JsInvoker jsInvoker;

@if (post == null)
{
    <Loading />
}
else
{
    @if (post != null)
    {
        var _post = post;

        <article class="post-wrap">
            <header class="post-header">
                <h1 class="post-title">@_post.Title</h1>
                <div class="post-meta">
                    Author: <a itemprop="author" rel="author" href="javascript:;">@_post.Author</a>
                    <span class="post-time">
                        Date: <a href="javascript:;">@_post.CreationTime</a>
                    </span>
                    <span class="post-category">
                        Category:<a href="/category/@_post.Category.DisplayName/">@_post.Category.CategoryName</a>
                    </span>
                </div>
            </header>
            <div class="post-content" id="content">
                @((MarkupString)_post.Html)
            </div>
            <section class="post-copyright">
                <p class="copyright-item">
                    <span>Author:</span>
                    <span>@_post.Author</span>
                </p>
                <p class="copyright-item">
                    <span>Permalink:</span>
                    <span><a href="/post@_post.Url">https://meowv.com/post@_post.Url</a></span>
                </p>
                <p class="copyright-item">
                    <span>License:</span>
                    <span>本文采用<a target="_blank" href="http://creativecommons.org/licenses/by-nc-nd/4.0/"> 知识共享 署名-非商业性使用-禁止演绎(CC BY-NC-ND)国际许可协议 </a>进行许可</span>
                </p>
            </section>
            <section class="post-tags">
                <div>
                    <span>Tag(s):</span>
                    <span class="tag">
                        @if (_post.Tags.Any())
                        {
                            @foreach (var tag in _post.Tags)
                            {
                                <a href="/tag/@tag.DisplayName/"># @tag.TagName</a>
                            }
                        }
                    </span>
                </div>
                <div>
                    <a @onclick="async () => await jsInvoker.BaskAsync()">back</a>
                    <span>· </span>
                    <a href="/">home</a>
                </div>
            </section>
            <section class="post-nav">

                @*  @if (post.Previous != null)
        {
        <a class="prev"
        rel="prev"
        @onclick="@(async () => await jsInvoker.NavigateTo($"/post{post.Previous.Url}, true))"
        href="/post@post.Previous.Url">@post.Previous.Title</a>
        }
        @if (post.Next != null)
        {
        <a class="next"
        rel="next"
        @onclick="@(async () => await jsInvoker.NavigateTo($"/post{post.Next.Url}", true))"
        href="/post@post.Next.Url">
        @post.Next.Title
        </a>
        }*@
                @if (post.Previous != null)
                {
                    <a class="prev" rel="prev" href="/post/@post.Previous.Id">@post.Previous.Title</a>
                }
                @if (post.Next != null)
                {
                    <a class="next" rel="next" href="/post/@post.Next.Id">@post.Next.Title</a>
                }
            </section>
        </article>
    }
    else
    {
        <ErrorTip />
    }
}

@code {
    [Parameter]
    public Guid id { get; set; }
    [Parameter]
    public int year { get; set; }

    [Parameter]
    public int month { get; set; }

    [Parameter]
    public int day { get; set; }

    [Parameter]
    public string name { get; set; }
    private PostDto post;

    protected override async Task OnInitializedAsync()
    {
        await GetData(id);
    }
    private async Task GetData(Guid id)
    {
        post = await postService.GetAsync(id);
    }
    protected override async Task OnParametersSetAsync()
    {
        await GetData(id);
    }
}
